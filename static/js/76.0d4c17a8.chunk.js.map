{"version":3,"file":"static/js/76.0d4c17a8.chunk.js","mappings":"oPACA,EAA2B,uBAA3B,EAAuG,yB,SCuDvG,MAhDA,WAEE,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QAERE,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GAkBpB,OAhBAI,EAAAA,EAAAA,YAAU,WAER,IAAMC,EAAS,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAESC,EAAAA,EAAAA,IAAU,sCAADC,OACQnB,EAAO,qBAAAmB,OAbxC,qCAcL,KAAD,EAFKL,EAAQC,EAAAK,KAGdb,EAAQO,EAASO,KAAKf,MAAMS,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAO,GAAAP,EAAA,SAE5BQ,QAAQC,MAAM,wBAAuBT,EAAAO,IAAS,yBAAAP,EAAAU,OAAA,GAAAZ,EAAA,kBAEjD,kBATc,OAAAH,EAAAgB,MAAA,KAAAC,UAAA,KAWflB,GACF,GAAG,CAACT,KAGF4B,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAgBC,SAC7BzB,EAAK0B,KAAI,SAAAC,GAAM,OACdC,EAAAA,EAAAA,MAAA,OAA0BL,UAAWC,EAAkBC,SAAA,EACrDH,EAAAA,EAAAA,KAAA,OACEO,IAAG,kCAAAhB,OAAoCc,EAAOG,cAC9CC,IAAKJ,EAAOK,KACZC,QAAS,SAAAC,GACPA,EAAEC,OAAOC,QAAU,KACnBF,EAAEC,OAAON,IACP,mDACJ,KAEFP,EAAAA,EAAAA,KAAA,KAAAG,SAAIE,EAAOK,QACXJ,EAAAA,EAAAA,MAAA,KAAAH,SAAA,CAAG,MAAIE,EAAOU,eAXNV,EAAOW,QAYX,KAId,C","sources":["webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"castList\":\"Cast_castList__ARoWn\",\"reviewsList\":\"Cast_reviewsList__EVgBd\",\"castMember\":\"Cast_castMember__RY3Nk\",\"reviewItem\":\"Cast_reviewItem__8frMD\"};","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport styles from './Cast.module.css';\n\nconst apiKey = '47654636e0a81733a8194af924ebd404';\n\nfunction Cast() {\n  //se extrage movieId din parametrii rutei url\n  const { movieId } = useParams();\n  //tine cont de lista de actori\n  const [cast, setCast] = useState([]);\n  //utiliz pt a efectua o cerere catre api pt a obt infromatii cu privire la actori at cand movieid se schimba\n  useEffect(() => {\n    //face cerere la GET catre API pt a obt inform despre distributie \n    const fetchCast = async () => {\n      try {\n        const response = await axios.get(\n          `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${apiKey}`\n        );\n        setCast(response.data.cast);\n      } catch (error) {\n        console.error('Failed to fetch cast:', error);\n      }\n    };\n\n    fetchCast();\n  }, [movieId]);\n\n  return (\n    <div className={styles.castList}>\n      {cast.map(member => (\n        <div key={member.cast_id} className={styles.castMember}>\n          <img\n            src={`https://image.tmdb.org/t/p/w200${member.profile_path}`}\n            alt={member.name}\n            onError={e => {\n              e.target.onerror = null;\n              e.target.src =\n                'https://via.placeholder.com/200x300?text=No+Image';\n            }}\n          />\n          <p>{member.name}</p>\n          <p>as {member.character}</p>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nCast.propTypes = {\n \n  cast: PropTypes.array,\n};\n\nexport default Cast;\n"],"names":["movieId","useParams","_useState","useState","_useState2","_slicedToArray","cast","setCast","useEffect","fetchCast","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","axios","concat","sent","data","t0","console","error","stop","apply","arguments","_jsx","className","styles","children","map","member","_jsxs","src","profile_path","alt","name","onError","e","target","onerror","character","cast_id"],"sourceRoot":""}