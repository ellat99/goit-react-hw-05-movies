{"version":3,"file":"static/js/321.19ac693c.chunk.js","mappings":"8PACA,GAAgB,aAAe,mCAAmC,oBAAsB,0CAA0C,iBAAmB,uCAAuC,UAAY,gCAAgC,eAAiB,qCAAqC,MAAQ,6B,SCqFtS,MA/EA,WAEE,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,QAAQC,IAAIH,GAEZ,IAAAI,GAAwCC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/CI,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GAepC,OAdAI,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAECC,EAAAA,EAAAA,IAAU,sCAADC,OACQrB,EAAO,aAAAqB,OAXxC,qCAYL,KAAD,EAFKL,EAAQC,EAAAK,KAGdb,EAAgBO,EAASO,MAAMN,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAO,GAAAP,EAAA,SAE/Bf,QAAQuB,MAAM,iCAAgCR,EAAAO,IAAS,yBAAAP,EAAAS,OAAA,GAAAX,EAAA,kBAE1D,kBATsB,OAAAH,EAAAe,MAAA,KAAAC,UAAA,KAUvBjB,GACF,GAAG,CAACX,IAECQ,GAMHqB,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAAA,aAAoBC,SAAA,EAClCC,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAAA,qBAEhBF,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAAA,oBAA2BC,SAAA,EACzCC,EAAAA,EAAAA,KAAA,OACEC,IAAG,kCAAAb,OAAoCb,EAAa2B,aACpDC,IAAK5B,EAAa6B,SAEpBR,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAAA,iBAAwBC,SAAA,EACtCH,EAAAA,EAAAA,MAAA,MAAAG,SAAA,CACGxB,EAAa6B,MAAM,KACnB,IAAIC,KAAK9B,EAAa+B,cAAcC,cAAc,QAErDX,EAAAA,EAAAA,MAAA,KAAAG,SAAA,EACEC,EAAAA,EAAAA,KAAA,QAAMQ,MAAO,CAAEC,WAAY,QAASV,SAAC,gBAAmB,IACvDW,KAAKC,MAAkC,GAA5BpC,EAAaqC,cAAmB,QAE9ChB,EAAAA,EAAAA,MAAA,KAAAG,SAAA,EACEC,EAAAA,EAAAA,KAAA,QAAMQ,MAAO,CAAEC,WAAY,QAASV,SAAC,cAAiB,IACrDxB,EAAasC,aAEhBjB,EAAAA,EAAAA,MAAA,KAAAG,SAAA,EACEC,EAAAA,EAAAA,KAAA,QAAMQ,MAAO,CAAEC,WAAY,QAASV,SAAC,YAAe,IACnDxB,EAAauC,OAAOC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAI,IAAEC,KAAK,gBAKzDtB,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAAA,eAAsBC,SAAA,EACpCC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,4BACJH,EAAAA,EAAAA,MAAA,MAAAG,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAACmB,EAAAA,GAAI,CAACC,GAAE,WAAAhC,OAAarB,EAAO,SAAS8B,UAAWC,EAAAA,MAAaC,SAAC,YAIhEC,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAACmB,EAAAA,GAAI,CAACC,GAAE,WAAAhC,OAAarB,EAAO,YAAY8B,UAAWC,EAAAA,MAAaC,SAAC,qBAMvEC,EAAAA,EAAAA,KAACqB,EAAAA,GAAM,QAjDerB,EAAAA,EAAAA,KAAA,OAAAD,SAAK,cAoDjC,C","sources":["webpack://react-homework-template/./src/components/MoviesDetails/MovieDetails.module.css?079b","components/MoviesDetails/MoviesDetails.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movieDetails\":\"MovieDetails_movieDetails__0Nl6U\",\"movieDetailsContent\":\"MovieDetails_movieDetailsContent__pKtwQ\",\"movieDetailsText\":\"MovieDetails_movieDetailsText__XyxXZ\",\"movieInfo\":\"MovieDetails_movieInfo__Z8jL2\",\"additionalInfo\":\"MovieDetails_additionalInfo__By30c\",\"links\":\"MovieDetails_links__JBwQZ\"};","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useParams, Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport styles from './MovieDetails.module.css';\nimport { Outlet } from 'react-router-dom';\nconst apiKey = '47654636e0a81733a8194af924ebd404';\nfunction MovieDetails() {\n  //folosim useParams pt a extrage id ul din parametrii rutei url\n  const { movieId } = useParams();\n  console.log(movieId);\n  //defineste starea movieDetails cu ajutorul useState ,initializam cu null pt a fi fara informatii\n  const [movieDetails, setMovieDetails] = useState(null);\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      try {\n        const response = await axios.get(\n          `https://api.themoviedb.org/3/movie/${movieId}?api_key=${apiKey}`\n        );\n        setMovieDetails(response.data);\n      } catch (error) {\n        console.error('Failed to fetch movie details:', error);\n      }\n    };\n    fetchMovieDetails();\n  }, [movieId]);\n\n  if (!movieDetails) return <div>Loading...</div>;\n  return (\n    //incadreaza toate detaliile filmului\n    // afiseaza titlul fimului si anul lansariipt h1\n    //rotunjim scorul cel mai aporape de procentaj\n    //span>{' '} pt a avea spatiul gol\n    <div className={styles.movieDetails}>\n      <div className={styles.movieDetailsTitle}></div>\n\n      <div className={styles.movieDetailsContent}>\n        <img\n          src={`https://image.tmdb.org/t/p/w500${movieDetails.poster_path}`}\n          alt={movieDetails.title}\n        />\n        <div className={styles.movieDetailsText}>\n          <h1>\n            {movieDetails.title} (\n            {new Date(movieDetails.release_date).getFullYear()})\n          </h1>\n          <p>\n            <span style={{ fontWeight: 'bold' }}>User score:</span>{' '}\n            {Math.round(movieDetails.vote_average * 10)}%\n          </p>\n          <p>\n            <span style={{ fontWeight: 'bold' }}>Overview:</span>{' '}\n            {movieDetails.overview}\n          </p>\n          <p>\n            <span style={{ fontWeight: 'bold' }}>Genres:</span>{' '}\n            {movieDetails.genres.map(genre => genre.name).join(', ')}\n          </p>\n        </div>\n      </div>\n\n      <div className={styles.additionalInfo}>\n        <h2>Additional Information</h2>\n        <ul>\n          <li>\n            <Link to={`/movies/${movieId}/cast`} className={styles.links}>\n              Cast\n            </Link>\n          </li>\n          <li>\n            <Link to={`/movies/${movieId}/reviews`} className={styles.links}>\n              Reviews\n            </Link>\n          </li>\n        </ul>\n      </div>\n      <Outlet />\n    </div>\n  );\n}\n\nMovieDetails.propTypes = {\n  //   movieId: PropTypes.string.isRequired,\n  movieDetails: PropTypes.object,\n};\n\nexport default MovieDetails;\n"],"names":["movieId","useParams","console","log","_useState","useState","_useState2","_slicedToArray","movieDetails","setMovieDetails","useEffect","fetchMovieDetails","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","axios","concat","sent","data","t0","error","stop","apply","arguments","_jsxs","className","styles","children","_jsx","src","poster_path","alt","title","Date","release_date","getFullYear","style","fontWeight","Math","round","vote_average","overview","genres","map","genre","name","join","Link","to","Outlet"],"sourceRoot":""}